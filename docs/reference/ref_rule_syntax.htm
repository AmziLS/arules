<html><!-- #BeginTemplate "/Templates/arulesxl.dwt" --><!-- DW6 -->
<!-- saved from url=about:internet -->
<head>
<link rel="stylesheet" type="text/css"
href="../arulesxl.css" />
<!-- #BeginEditable "doctitle" -->
<title>Reference - Rule Syntax</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>
<body bgcolor="#FFFFFF" text="#000033" link="#990066" vlink="#990099" alink="#9900FF">
<table width=100%>
<tr>
<td><h1><!-- #BeginEditable "head" -->Reference<!-- #EndEditable --></h1></td>
    <td><a href="http://www.arulesxl.com" target="_top"><img src="../images/logo.gif" width="150" height="115" border="0" align="right"></a></td>
</tr>
</table>
<hr>
<p><font size="-1"><b><a href="../index.htm" target=_top>Top</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="../install.htm">Installation</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="../introduction.htm">Introduction</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="../samples.htm">Samples</a>&nbsp;&nbsp;&nbsp;&nbsp; <a href="../tutorial.htm">Tutorial</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="../reference.htm">Reference</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="../release_notes.htm">Release Notes</a></b></font></p>
<hr>
<!-- #BeginEditable "body" --> 
<h2><a name="rule_syntax"></a>Rule Syntax</h2>

<p> 
  <!amzi_index=Rule Sets; Facts>
  Rule sets manipulate properties. Facts associated with 
  a rule set are defined implicitly by their use in rules.</p>
<p>Rules establish relationships between various facts.</p>
<h3><a name="rules"></a>Rules</h3>
<p> 
  <!amzi_index=Rules; when; Expressions; Conditions>
A rule is of the form:</p>
<pre>fact = expression WHEN conditions</pre>
<p>The WHEN clause is optional, and a rule can simply set a value for a fact.</p>
<blockquote>
  <p><b>expression</b> can be either a formula or a simple value.</p>
  <p><b>conditions</b> are boolean tests for other fact values.</p>
</blockquote>
<p>Examples:</p>
<pre>price = 10 WHEN order_quantity &gt;5 and order_color = &quot;blue&quot;
cost = base + surcharge WHEN duration &lt; 30 or day = &quot;Saturday&quot;
loan_status = &quot;Loan is &quot; &amp; loan_approval
loan_approval = &quot;approved&quot; WHEN credit_rating &gt;100
loan_approval = &quot;denied&quot; WHEN credit_rating &lt;= 100</pre>
<p>See following sections for details on facts, formulas, values and 
  conditions</p>
<h3><a name="object_properties"></a>Facts</h3>
<p> 
  <!amzi_index=Facts>
Facts are represented by:</p>
<pre>ruleset <b>: </b>fact[ instance ]</pre>
<p>The ruleset and instance   are optional; a fact can 
  be used by itself.</p>
<p>The ruleset specification is used to trigger reasoning in other rule sets.</p>
<p>Examples of facts:</p>
<pre>part[&quot;gizmo&quot;]
loan[1]
customer_name
color
price
GizmoRules:price
Parts<b>:</b>part[&quot;gizmo&quot;]</pre>
<p>The asterisk can be used in the fact instance to specify an array or list. 
  For example consider this table which is loaded via <code>RArray()</code> into a fact 
  named <code>profit_loss[?,?]</code>:</p>
<blockquote>
  <table border="1" cellpadding="0" cellspacing="0">
    <col width="89">
    <col width="64" span="4">
    <tr height="17">
      <td width="89" height="17" bgcolor="#CCCCCC">&nbsp;</td>
      <td width="64" bgcolor="#CCCCCC">Q1</td>
      <td width="64" bgcolor="#CCCCCC">Q2</td>
      <td width="64" bgcolor="#CCCCCC">Q3</td>
      <td width="64" bgcolor="#CCCCCC">Q4</td>
    </tr>
    <tr height="17">
      <td height="17" bgcolor="#CCCCCC">Revenues</td>
      <td align="right">$100.00 </td>
      <td align="right">$120.00 </td>
      <td align="right">$140.00 </td>
      <td align="right">$190.00 </td>
    </tr>
    <tr height="17">
      <td height="17" bgcolor="#CCCCCC">Expenses</td>
      <td align="right">$90.00 </td>
      <td align="right">$115.00 </td>
      <td align="right">$100.00 </td>
      <td align="right">$160.00 </td>
    </tr>
    <tr height="17">
      <td height="17" bgcolor="#CCCCCC">Income</td>
      <td align="right">$10.00 </td>
      <td align="right">$5.00 </td>
      <td align="right">$40.00 </td>
      <td align="right">$30.00 </td>
    </tr>
    <tr height="17">
      <td height="17" bgcolor="#CCCCCC">Taxes</td>
      <td align="right">$2.50 </td>
      <td align="right">$1.25 </td>
      <td align="right">$10.00 </td>
      <td align="right">$7.50 </td>
    </tr>
  </table>
</blockquote>
<p>So <code>profit_loss[ &quot;Expenses&quot;, Q2 ]</code> has the value 115.</p>
<p>The asterisk can be used to refer to a column or row. So <code>profit_loss[*, 
  &quot;Q1&quot;]</code> returns this value [100, 90, 10, 2.5]</p>
<p><code>profit_loss[&quot;Revenues&quot;, *]</code> returns [100, 120, 140, 190]</p>
<p>
  <!amzi_index=Pattern Matching Variables>
  Pattern matching variables can be used in the fact instance. For example:</p>
<pre>income = profit_loss[&quot;Income&quot;, ?q] WHEN ?q = quarter</pre>
<p>Variables can also be used for the ruleset specification. This allows the dynamic 
  choosing of rule sets. For example:</p>
<pre>price = ?x : price when ?x = part_rule_set</pre>
<p>
  <!amzi_index=Facts, Names>
  Fact names are case insensitive.</p>
<p>Facts are not typed, so any fact can be assigned any type of 
  value.</p>
<h3><a name="property_values"></a>Fact Values</h3>
<p> 
  <!amzi_index=Facts; Numbers; Strings; Text Values; Booleans; true; false>
Facts can take on different types of values:</p>
<p>Numbers can be expressed in any standard form, including integers, decimals 
  and floating point notation.</p>
<p>Text values must be enclosed in either single or double quotes.</p>
<p>Boolean values are <code>&quot;true&quot;</code> and <code>&quot;false&quot;</code>. 
  Boolean values can be explicitly stated, or left off. A fact name in a rule 
  without a value is assumed to have the value <code>&quot;true&quot;</code>.</p>
<p>Examples:</p>
<pre>part[&quot;gizmo&quot;, &quot;unit_price&quot;] = 4.99
age_limit = 16
day_off = &quot;Saturday&quot;
loan_status = &quot;Loan is approved&quot;
work = no WHEN day = 'New Years'
filename = 'pricing.xls'
weekend WHEN day = 'Saturday' OR day = 'Sunday'
rate = 10 WHEN NOT weekend
weekend = &quot;true&quot; WHEN day = 'Saturday' OR day = 'Sunday'
rate = 10 WHEN weekend = &quot;false&quot;</pre>
<p>Dates and times can also be used as values. See the section on date/time for 
  details.</p>
<h3><a name="formulas"></a>Formulas</h3>
<p>
  <!amzi_index=Numeric Formulas; Text Formulas; Formulas>
  Formulas can be numeric or textual. They can also deal with date/times as explained 
  in the section on date time.</p>
<p><em>Numeric formulas</em> can contain the standard arithmetic operators, <code>+ 
  - / *</code>, as well as:</p>
<blockquote>
  <p><code>X ** Y</code> raise X to the Yth power;<br>
      <code>X // Y</code> integer divide X by Y, returning an integer.</p>
</blockquote>
<p>Example:</p>
<pre>price = base_price + (duration - 10) * surcharge WHEN duration > 10
area = 3.14159 * radius ** 2 WHEN shape = &quot;circle&quot;
</pre>
<p><em>
  <!amzi_index=line; space>
  Textual formulas</em> use the <code>&amp;</code> operator to concatenate 
textual property values. Formatting can be controlled with the special words:</p>
<ul>
  <li><b>line</b> &mdash; inserts a new line (the cell must be set to wrap text)</li>
  <li><b>space</b> &mdash; inserts a space</li>
</ul>
<p>Example:</p>
<pre>report = 'The status is ' &amp; status &amp; line &amp; reason
reason = 'bad credit' WHEN credit_rating &lt; 100
reason = 'insufficient down payment' WHEN down_payment < 0.2 * purchase_price
</pre>
<p>See <a href="ref_rule_functions.htm">Rule Functions</a> for a complete list of all the functions that can be included in numeric and text formulas. </p>
<h3><a name="conditions"></a>Conditions</h3>
<p>
  <!amzi_index=Conditions; Tests; and; or; not; &lt;=; &gt;=; &lt;; &gt;>
The conditions on a rule are expressed as:</p>
<pre>Fact &lt;test&gt; Expression</pre>
<p>Where &lt;test&gt; is one of =, &gt;, &gt;=, &lt;=, &lt;. Values are as above. 
  Example:</p>
<pre>duration &gt; 10
loan &lt;= assets - liabilities
weekend = yes</pre>
<p>Conditions can be joined together by booleans: AND, OR, NOT:</p>
<pre>weekend when day = &quot;Sunday&quot; or day = &quot;Saturday&quot;</pre>
<h3><a name="rule_variables"></a>Pattern Matching Variables</h3>
<p>
  <!amzi_index=Variables; Pattern Matching Variables>
  Unlike facts, which are accessible by all rules in a rule set, pattern matching variables 
  only pertain to the rule they occur in.</p>
<p>Variables take on values in the conditions clause of a rule. Those values 
  can then be used when setting the fact in the rule.</p>
<p>A  variable is indicated by a leading ?.</p>
<p>Variables can be used to dynamically pick an instance of an fact, or 
  to dynamically select a secondary rule set to query.</p>
<p>Examples:</p>
<pre>price = ?x WHEN ?x = unit_price * quantity
price = quantity * part[?part, unit_price] WHEN ?part = part
price = quantity * ?partrules<b>:</b>unit_price WHEN ?partrules = part_name & "rules"</pre>
<p>The first example is not a particularly good way to code that rule, but does 
  illustrate how a rule variable works. The equality test in the condition sets 
  the value of <code>?x</code>, which can then be used in setting a value for 
  <code>price</code>.</p>
<p>The second example illustrates that <code>?part</code> is local to the rule, 
  but can get a value from <code>part</code> which is a fact known 
  in the rule set.</p>
<p>The third example shows the use of a text formula to create a variable value 
  that represents the name of a rule set to be used for calculating unit price.</p>
<h3><a name="linking_properties_cells"></a>Linking Facts and Cells</h3>
<p>
  <!amzi_index=RCell(); RTable()>
Rule facts can be linked to cells in three ways:</p>
<ul>
  <li><code>RCell()</code> &#8212; maps one cell to an property. (see section on <a href="ref_spreadsheet_functions.htm">spreadsheet 
    functions</a>)</li>
  <li><code>RArray()</code> &#8212; maps a range of cells (optionally with row/column headers) to 
    an indexed property. (see section on <a href="ref_spreadsheet_functions.htm">spreadsheet 
      functions</a>)</li>
  <li>Excel text formulas &#8212; this is not recommended due to issues with quoting 
    and date conversion which are required for some cell values.</li>
</ul>
<p>With each of these techniques, when a value in a linked cell changes, the rule 
  set is considered to have changed as well, and thus any queries dependent on 
  the rule set will be recalculated.</p>
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <th width="100%" scope="col"><h4><a href="ref_rule_syntax.htm" target="_blank">Open in New Window to Print</a></h4></th>
  </tr>
</table>
<!-- #EndEditable --> 
<hr>
<table width=100%>
<tr>
<td>
<img src="../images/logo_very_small.gif">
</td>
<td>
<h2 align="right">
<font size="2"><i>Copyright &copy;2005-7 <a href="http://www.amzi.com/">Amzi! inc.</a> All Rights Reserved.</i></font><br>
<font size="1"><i>ARulesXL and Amzi! are trademarks or registered trademarks of Amzi! <br>
Microsoft and Excel  are trademarks or registered trademarks of   Microsoft Corporation.</i></font></h2>
</td>
</tr>
</table>
</body>
<!-- #EndTemplate --></html>
