/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class amzi_ls_ARulesLogicServer */

#ifndef _Included_amzi_ls_ARulesLogicServer
#define _Included_amzi_ls_ARulesLogicServer
#ifdef __cplusplus
extern "C" {
#endif
#undef amzi_ls_ARulesLogicServer_pERR
#define amzi_ls_ARulesLogicServer_pERR -1L
#undef amzi_ls_ARulesLogicServer_pATOM
#define amzi_ls_ARulesLogicServer_pATOM 0L
#undef amzi_ls_ARulesLogicServer_pINT
#define amzi_ls_ARulesLogicServer_pINT 1L
#undef amzi_ls_ARulesLogicServer_pSTR
#define amzi_ls_ARulesLogicServer_pSTR 2L
#undef amzi_ls_ARulesLogicServer_pFLOAT
#define amzi_ls_ARulesLogicServer_pFLOAT 3L
#undef amzi_ls_ARulesLogicServer_pSTRUCT
#define amzi_ls_ARulesLogicServer_pSTRUCT 4L
#undef amzi_ls_ARulesLogicServer_pLIST
#define amzi_ls_ARulesLogicServer_pLIST 5L
#undef amzi_ls_ARulesLogicServer_pTERM
#define amzi_ls_ARulesLogicServer_pTERM 6L
#undef amzi_ls_ARulesLogicServer_pADDR
#define amzi_ls_ARulesLogicServer_pADDR 7L
#undef amzi_ls_ARulesLogicServer_pVAR
#define amzi_ls_ARulesLogicServer_pVAR 8L
#undef amzi_ls_ARulesLogicServer_pWSTR
#define amzi_ls_ARulesLogicServer_pWSTR 9L
#undef amzi_ls_ARulesLogicServer_pWATOM
#define amzi_ls_ARulesLogicServer_pWATOM 10L
#undef amzi_ls_ARulesLogicServer_pREAL
#define amzi_ls_ARulesLogicServer_pREAL 11L
#undef amzi_ls_ARulesLogicServer_jAATOM
#define amzi_ls_ARulesLogicServer_jAATOM 0L
#undef amzi_ls_ARulesLogicServer_jASTR
#define amzi_ls_ARulesLogicServer_jASTR 1L
#undef amzi_ls_ARulesLogicServer_jINT
#define amzi_ls_ARulesLogicServer_jINT 2L
#undef amzi_ls_ARulesLogicServer_jLONG
#define amzi_ls_ARulesLogicServer_jLONG 3L
#undef amzi_ls_ARulesLogicServer_jSHORT
#define amzi_ls_ARulesLogicServer_jSHORT 4L
#undef amzi_ls_ARulesLogicServer_jFLOAT
#define amzi_ls_ARulesLogicServer_jFLOAT 5L
#undef amzi_ls_ARulesLogicServer_jDOUBLE
#define amzi_ls_ARulesLogicServer_jDOUBLE 6L
#undef amzi_ls_ARulesLogicServer_jADDR
#define amzi_ls_ARulesLogicServer_jADDR 7L
#undef amzi_ls_ARulesLogicServer_jTERM
#define amzi_ls_ARulesLogicServer_jTERM 8L
#undef amzi_ls_ARulesLogicServer_jWSTR
#define amzi_ls_ARulesLogicServer_jWSTR 9L
#undef amzi_ls_ARulesLogicServer_jWATOM
#define amzi_ls_ARulesLogicServer_jWATOM 10L
#undef amzi_ls_ARulesLogicServer_jMOD
#define amzi_ls_ARulesLogicServer_jMOD 11L
#undef amzi_ls_ARulesLogicServer_jGOAL
#define amzi_ls_ARulesLogicServer_jGOAL 12L
#undef amzi_ls_ARulesLogicServer_CUR_IN
#define amzi_ls_ARulesLogicServer_CUR_IN 0L
#undef amzi_ls_ARulesLogicServer_CUR_OUT
#define amzi_ls_ARulesLogicServer_CUR_OUT 1L
#undef amzi_ls_ARulesLogicServer_CUR_ERR
#define amzi_ls_ARulesLogicServer_CUR_ERR 2L
#undef amzi_ls_ARulesLogicServer_USER_IN
#define amzi_ls_ARulesLogicServer_USER_IN 3L
#undef amzi_ls_ARulesLogicServer_USER_OUT
#define amzi_ls_ARulesLogicServer_USER_OUT 4L
#undef amzi_ls_ARulesLogicServer_USER_ERR
#define amzi_ls_ARulesLogicServer_USER_ERR 5L
/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    Init
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_Init
  (JNIEnv *, jobject, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    Init2
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_Init2
  (JNIEnv *, jobject, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    InitLSX
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_InitLSX
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    AddLSX
 * Signature: (Ljava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_AddLSX
  (JNIEnv *, jobject, jstring, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    AddJPred
 * Signature: (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_AddJPred
  (JNIEnv *, jobject, jstring, jint, jstring, jstring, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    Load
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_Load
  (JNIEnv *, jobject, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    LoadFromMemory
 * Signature: (Ljava/lang/String;I[B)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_LoadFromMemory
  (JNIEnv *, jobject, jstring, jint, jbyteArray);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    Main
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_amzi_ls_ARulesLogicServer_Main
  (JNIEnv *, jobject);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    Reset
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_Reset
  (JNIEnv *, jobject);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    JClose
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_JClose
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    OpenJStream
 * Signature: (ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;J)I
 */
JNIEXPORT jint JNICALL Java_amzi_ls_ARulesLogicServer_OpenJStream
  (JNIEnv *, jobject, jint, jstring, jstring, jstring, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    CloseJStream
 * Signature: (IJ)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_CloseJStream
  (JNIEnv *, jobject, jint, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    SetStream
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_SetStream
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    Exec
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_Exec
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    ExecStr
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_ExecStr
  (JNIEnv *, jobject, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    Call
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_Call
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    CallStr
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_CallStr
  (JNIEnv *, jobject, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    Redo
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_amzi_ls_ARulesLogicServer_Redo
  (JNIEnv *, jobject);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    ClearCall
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_ClearCall
  (JNIEnv *, jobject);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    Asserta
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_Asserta
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    Assertz
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_Assertz
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    Retract
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_Retract
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    AssertaStr
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_AssertaStr
  (JNIEnv *, jobject, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    AssertzStr
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_amzi_ls_ARulesLogicServer_AssertzStr
  (JNIEnv *, jobject, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    RetractStr
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_amzi_ls_ARulesLogicServer_RetractStr
  (JNIEnv *, jobject, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    TermToStr
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_amzi_ls_ARulesLogicServer_TermToStr
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    TermToStrQ
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_amzi_ls_ARulesLogicServer_TermToStrQ
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    StrToTerm
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_StrToTerm
  (JNIEnv *, jobject, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    StrTermLen
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_amzi_ls_ARulesLogicServer_StrTermLen
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    MakeAtom
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_MakeAtom
  (JNIEnv *, jobject, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    MakeStr
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_MakeStr
  (JNIEnv *, jobject, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    MakeInt
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_MakeInt
  (JNIEnv *, jobject, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    MakeFloat
 * Signature: (D)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_MakeFloat
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetTermType
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_amzi_ls_ARulesLogicServer_GetTermType
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetStrTerm
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_amzi_ls_ARulesLogicServer_GetStrTerm
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetIntTerm
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_amzi_ls_ARulesLogicServer_GetIntTerm
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetFloatTerm
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_amzi_ls_ARulesLogicServer_GetFloatTerm
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetParmType
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_amzi_ls_ARulesLogicServer_GetParmType
  (JNIEnv *, jobject, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetParm
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_GetParm
  (JNIEnv *, jobject, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetStrParm
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_amzi_ls_ARulesLogicServer_GetStrParm
  (JNIEnv *, jobject, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetIntParm
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_amzi_ls_ARulesLogicServer_GetIntParm
  (JNIEnv *, jobject, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetFloatParm
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_amzi_ls_ARulesLogicServer_GetFloatParm
  (JNIEnv *, jobject, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    UnifyParm
 * Signature: (IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_amzi_ls_ARulesLogicServer_UnifyParm
  (JNIEnv *, jobject, jint, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    UnifyStrParm
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_amzi_ls_ARulesLogicServer_UnifyStrParm
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    UnifyAtomParm
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_amzi_ls_ARulesLogicServer_UnifyAtomParm
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    UnifyIntParm
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_amzi_ls_ARulesLogicServer_UnifyIntParm
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    UnifyFloatParm
 * Signature: (ID)Z
 */
JNIEXPORT jboolean JNICALL Java_amzi_ls_ARulesLogicServer_UnifyFloatParm
  (JNIEnv *, jobject, jint, jdouble);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetFunctor
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_amzi_ls_ARulesLogicServer_GetFunctor
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetArity
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_amzi_ls_ARulesLogicServer_GetArity
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    MakeFA
 * Signature: (Ljava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_MakeFA
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetArg
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_GetArg
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetStrArg
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_amzi_ls_ARulesLogicServer_GetStrArg
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetIntArg
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_amzi_ls_ARulesLogicServer_GetIntArg
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetFloatArg
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_amzi_ls_ARulesLogicServer_GetFloatArg
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    UnifyAtomArg
 * Signature: (JILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_UnifyAtomArg
  (JNIEnv *, jobject, jlong, jint, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    UnifyStrArg
 * Signature: (JILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_UnifyStrArg
  (JNIEnv *, jobject, jlong, jint, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    UnifyIntArg
 * Signature: (JII)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_UnifyIntArg
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    UnifyFloatArg
 * Signature: (JID)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_UnifyFloatArg
  (JNIEnv *, jobject, jlong, jint, jdouble);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetArgType
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_amzi_ls_ARulesLogicServer_GetArgType
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    StrArgLen
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_amzi_ls_ARulesLogicServer_StrArgLen
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    MakeList
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_MakeList
  (JNIEnv *, jobject);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    PushList
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_PushList
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetHead
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_GetHead
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetStrHead
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_amzi_ls_ARulesLogicServer_GetStrHead
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetIntHead
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_amzi_ls_ARulesLogicServer_GetIntHead
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetFloatHead
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_amzi_ls_ARulesLogicServer_GetFloatHead
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetTail
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_amzi_ls_ARulesLogicServer_GetTail
  (JNIEnv *, jobject, jlong);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    GetVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_amzi_ls_ARulesLogicServer_GetVersion
  (JNIEnv *, jobject);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    ARulesRegisterRuntime
 * Signature: (JLjava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_amzi_ls_ARulesLogicServer_ARulesRegisterRuntime
  (JNIEnv *, jobject, jlong, jstring, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    Link
 * Signature: (Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_amzi_ls_ARulesLogicServer_Link
  (JNIEnv *, jobject, jstring, jobjectArray, jstring);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    getLinkMessage
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_amzi_ls_ARulesLogicServer_getLinkMessage
  (JNIEnv *, jobject);

/*
 * Class:     amzi_ls_ARulesLogicServer
 * Method:    getEnvironmentVariable
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_amzi_ls_ARulesLogicServer_getEnvironmentVariable
  (JNIEnv *, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif
