<html><!-- #BeginTemplate "/Templates/tutorial_collections.dwt" --><!-- DW6 -->
<!-- saved from url=about:internet -->
<head>
<link rel="stylesheet" type="text/css"
href="../../arulesxl.css" />
<!-- #BeginEditable "doctitle" -->
<title>ARulesXL</title>
<!-- #EndEditable --> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>
<body bgcolor="#FFFFFF" text="#000033" link="#990066" vlink="#990099" alink="#9900FF">
<table width=100%>
<tr>
<td><h1><!-- #BeginEditable "head" -->Rules and Decision Tables<!-- #EndEditable --></h1></td>
    <td><a href="http://www.arulesxl.com" target="_top"><img src="../../images/logo.gif" width="150" height="115" border="0" align="right"></a></td>
</tr>
</table>
<hr>
<p><font size="-1"><b><a href="../../tutorial.htm" target=_top>Tutorial Index</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="collections_01-02_rules_decision_tables.htm" target=_top>Rules &amp; Decision Tables</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="collections_03_column_queries.htm" target=_top>Column Queries</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="collections_04_property_arrays.htm" target=_top>Arrays</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="collections_05_data_tables.htm">Tables &amp; Pattern Matching</a>&nbsp;&nbsp;&nbsp;&nbsp; <a href="collections_06_lists.htm" target=_top>Lists</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="collections_07_vba.htm" target=_top>VBA</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="collections_08_modules.htm" target=_top>Multiple Rule Sets</a> &nbsp;&nbsp;&nbsp;&nbsp;<a href="collections_09_array_queries.htm" target=_top>Array Queries</a></b></font></p>
<hr>
<!-- #BeginEditable "body" --> 
<h3><i><a name="loans_01_rules"></a>loans_01_rules.xls<br>
  loans_02_decision_tables.xls </i></h3>
<p>Before jumping into the collections, it is important to understand the basic 
  concepts of ARulesXL <em>rule sets</em>, <em>facts</em>, <em>decision tables</em> 
  and <em>rules</em>. This is a brief overview, see the tutorial and documentation 
  for more details.</p>
<p>For this example, the conditions when a loan can be sold are:</p>
<ul>
  <li>FICO &gt;= 720 and LTV &gt;= 90 for any occupancy</li>
  <li>FICO &gt;= 720 and LTV &gt;= 80 and owner occupancy</li>
  <li>FICO &gt;= 700 and LTV &gt;= 90 and owner occupancy</li>
</ul>
<h2><a name="facts"></a>Facts</h2>
<p> 
  <!amzi_index=Facts>
  An ARulesXL rule set works with <em>facts</em>. Some facts are input, some are 
  output, and some are used in between.</p>
<p>A query to a <em>rule set</em> asks for the value of an <em>output fact</em> 
  based on certain <em>input facts</em>.</p>
<p>The input facts for this example are:</p>
<pre>FICO
LTV
Occupancy</pre>
<p>The output fact is:</p>
<pre>Resell</pre>
<p>Facts have values associated with them. In this example, <var>FICO</var> will 
  have values like <var>720</var> or <var>680</var>, and <var>Occupancy</var> 
  will have values like <var>&quot;Owner&quot;</var> or <var>&quot;2nd Home&quot;</var> 
  (text values need to be single or double quoted). These fact values will be 
  input to the rule set.</p>
<p>The output fact, <var>Resell</var>, will have a value of <var>&quot;yes&quot;</var> 
  or <var>&quot;no&quot;</var> depending on the values of the input facts.</p>
<h2><a name="rules"></a>Rules</h2>
<p> 
  <!amzi_index=Rules>
  Rules are used to set values of output or intermediate facts based on input 
  or other intermediate facts.</p>
<p>The rules that cover this example are ( the &lt;&gt; symbol means not equal):</p>
<pre>Resell = &quot;yes&quot; WHEN FICO &gt;= 720 AND LTV &gt;= 80
Resell = &quot;yes&quot; WHEN FICO &gt;= 700 AND LTV &gt;= 90
Resell = &quot;yes&quot; WHEN Occupancy &lt;&gt; &quot;Owner&quot; AND FICO &gt;= 720 AND LTV &gt;= 90
Resell = &quot;no&quot;</pre>
<p>The last rule is a catch all rule, setting <var>Resell</var> to <var>&quot;no&quot;</var> 
  if none of the other rules apply.</p>
<p><img src="images/collections_01_rules.gif" width="796" height="296"><br>
  <cite>loans_01_rules.xls</cite></p>
<h2><a name="rulesets"></a>Rule Sets</h2>
<p> 
  <!amzi_index=Rule Sets>
  Rules are entered into ARulesXL rule sets.</p>
<p>Rule sets are created by selecting a range of cells on a worksheet and using 
  the right mouse, or ARulesXL menu, to select <var>New Rule Set</var>. The name 
  you choose is put in the upper left cell of the range and the range is given 
  a double line border.</p>
<p>(By convention, the rule sets in this tutorial are also given an ivory background.)</p>
<p>The name of the rule set in the sample is <var>ResaleRules</var>.</p>
<p>When you are editting rules, the rules cannot be used in queries, and you will 
  see an error message indicating the rules are being changed.</p>
<p>Once you finish editting the rules reload the rules using either the ARulesXL 
  menu item <var>Load Modified Rules</var> or the right mouse menu for the same 
  thing. At that point <var>RQuery()</var>s using the rule set are re-executed.</p>
<p>The rule set name serves two purposes:</p>
<ul>
  <li>It is a name the ARulesXL rule engine uses to identify a set of rules; and</li>
  <li>It is an Excel name for the range of cells. (You can look at Excel's names 
    and see your rule sets there.)</li>
</ul>
<h2><a name="inputs_outputs"></a>Inputs/Outputs ( RQuery() )</h2>
<p>The function <var>RQuery()</var> is used to provide inputs to a rule set and 
  to get outputs. It is placed in a cell outside of the rule set. The syntax is:</p>
<pre>RQuery( RuleSet, QueryString, CellReference1, CellReference2, ... )</pre>
<p>The arguments are:</p>
<ul>
  <li><var>RuleSet</var> &#151; The name of the rule set, which identifies the 
    rule set and establishes an Excel dependency on the rule set range.</li>
  <li><var>QueryString</var> &#151; A string of the form: <code>&quot;FIND output1 
    AND output2 AND ... WHEN input1 = _1 AND input2 = _2 ...&quot; </code>The 
    _Ns are place holders to be filled in with values from Excel cells.</li>
  <li><var>CellReferenceN</var> &#151; Cell references for filling the place holders 
    _N in the QueryString. </li>
</ul>
<p>In the example the input properties are taken from cells <var>D5</var>, <var>E5</var>, 
  and <var>F5</var>.</p>
<pre>=RQuery(Resell, &quot;FIND Resell WHEN FICO = _1 AND LTV = _2 AND Occupancy = _3&quot;, D5, E5, F5)</pre>
<p>The value of <var>Resell</var> is returned as the value for the <var>RQuery()</var> 
  function.</p>
<h2><a name="rule_engine"></a>Rule Engine</h2>
<p> 
  <!amzi_index=Reasoning Engine>
  The ARulesXL rule engine determines which rules to use based on the required 
  output fact(s). It dynamically searches for rules that can provide the output. 
  Because it figures out which rules to use, it is not necessary to worry about 
  the flow of control through the rules.</p>
<h2><a name="decision_tables"></a>Decision Tables</h2>
<p> 
  <!amzi_index=Decision Tables>
  Decision tables often are an easier, more readable way to enter rules. A decision 
  table is started in a multi-column rule set with a statement defining the property 
  being set by a decision table. In this example:</p>
<pre>Table Resell</pre>
<p>Next, column headings are provided for the input and output properties of the 
  decision table. And then the table is filled in with the values. A * means a 
  value isn't needed for that property.</p>
<p>When the rules are loaded, the ARulesXL editor will put a single line border 
  around the decision table indicating it knows about the table.</p>
<p><img src="images/collections_02_decision_tables.gif" width="752" height="328"><br>
  <cite>loans_02_decision_tables.xls</cite></p>
<p>The rule sets in the two examples are equivalent, but one was entered using 
  rule syntax and the other using decision table syntax.</p>
<p>The two can be combined in a single rule set, so a decision table for <var>Resell</var> 
  can appear before or after rules for <var>Resell</var>. The only point to consider 
  is that the rules or table rows are evaluated in the order they appear in the 
  rule set.</p>
<p>In general:</p>
<ul>
  <li>Rules with all the same facts will be easier to maintain in decision tables; 
    and</li>
  <li>Rules with different facts in their conditions (WHEN clause) will be easier 
    to maintain as rules.</li>
</ul>
<p>&nbsp;</p>
<!-- #EndEditable --> 
<hr>
<table width=100%>
<tr>
<td>
<img src="../../images/logo_very_small.gif">
</td>
<td>
<h2 align="right">
<font size="2"><i>Copyright &copy;2005-7 <a href="http://www.amzi.com/">Amzi! inc.</a> All Rights Reserved.</i></font><br>
<font size="1"><i>ARulesXL and Amzi! are trademarks or registered trademarks of Amzi! <br>
Microsoft and Excel  are trademarks or registered trademarks of   Microsoft Corporation.</i></font></h2>
</td>
</tr>
</table>
</body>
<!-- #EndTemplate --></html>
